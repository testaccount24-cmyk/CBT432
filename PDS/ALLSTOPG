//GILBERTQ JOB (ACCT#),ALLSTOP,
// NOTIFY=&SYSUID,REGION=5M,
// CLASS=A,MSGCLASS=X,COND=(0,NE)
//ASMH EXEC PGM=ASMA90,PARM=(NODECK,OBJECT,NOESD,NORLD,NOXREF)
*--- This program can stop all jobs and stcs currently active  ---*
*    according to parameters you indicate (ddname SYSIN)          *
*    ===> IT MUST BE LINK-EDITED WITH AC=1                        *
*--- "SPACES" MACRO SETS A ZONE TO ALL SPACES                  ---*
         MACRO
&NLA     SPACES  &ZONE
         MVI   &ZONE,C' '                  FIRST BYTE SET TO SPACE
         MVC   &ZONE+1(L'&ZONE-1),&ZONE    PROPAGATE TO ALL BYTES
         MEND
* "SYSJOB" MACRO VERIFIES WHETHER A JOB IS ACTIVE                 *
         MACRO
&NLA     SYSJOB  &JOBNAME=
&NLA     DS    0H
.* IF JOB IS ACTIVE, WE OBTAIN ITS ASCB ADDRESS IN REG 1, AND ITS
.* ASID NUMBER IN REG 0 (RIGHT HALFWORD)
          STM   R5,R8,SVRG&SYSNDX   SAVE REGISTERS 5 THROUGH 8
          L     R15,16              CVT ADDRESS
          PUSH  USING
          USING CVT,R15
          L     R6,CVTASVT          LOAD ASVT ADDRESS
          DROP  R15
          USING ASVT,R6
          L     R5,ASVTMAXU
          LA    R6,ASVTENTY-4       R6=ADDRESS OF 1ST ASCB MINUS 4
LSVT&SYSNDX DS  0H
          LTR   R5,R5               MAXUSER = 0 ?
          BZ    NTFN&SYSNDX         YES, ASVT LOOKUP ENDED ->NOT FOUND
          BCTR  R5,0                MAXUSER - 1
          LA    R6,4(R6)            NEXT ASVT ENTRY
          USING ASCB,R7
          L     R7,0(R6)            R7=ASCB ADDRESS
          TM    0(R6),X'80'         AVAILABLE ASID ?
          BO    LSVT&SYSNDX         ASID NOT AVAILABLE, LET'S SEE NEXT
          CLC   =C'ASCB',ASCBASCB   VERIFYING ACRONYM
          BNE   LSVT&SYSNDX
          L     R1,ASCBJBNI         LOAD ADDRESS OF JOBNAME
          LTR   R1,R1
          BNZ   LJBN&SYSNDX
          L     R1,ASCBJBNS         LOAD ADDRESS OF STC
LJBN&SYSNDX CLC 0(8,R1),&JOBNAME    IS IT THAT JOB ?
          BNE   LSVT&SYSNDX
.* JOB WAS FOUND
          LH    R0,ASCBASID         LOAD ASID NUMBER
          LR    R1,7                PUT ASCB ADDRESS IN REG 1
          XR    R15,R15             RETURN CODE = 0
          B     XSVT&SYSNDX
NTFN&SYSNDX DS  0H
          LA    R15,12              RETURN CODE = 12, JOB DOESN'T EXIST
          B     XSVT&SYSNDX
.* JOB WAS NOT FOUND
SVRG&SYSNDX DS 4F                   4 WORDS TO SAVE REGISTERS 5,6,7,8
XSVT&SYSNDX DS 0H
          LM    R5,R8,SVRG&SYSNDX
          DROP  R6,R7
          POP   USING
          MEND
* "$MVSCMD" MACRO ISSUES AN MVS COMMAND                           *
         MACRO
.*
&NLA     $MVSCMD  &CMD
&NLA     DS   0H
         LA   1,L'&CMD
         MVC  MGCRCMD(L'&CMD),&CMD
         STH  R1,MGCRLEN
         MODESET EXTKEY=ZERO
         XR   R0,R0
         LA   R1,MGCRLEN
         SVC  34                  MGCR MACRO TO ADD COMMAND IN QUEUE
         MODESET KEY=NZERO
         MEXIT
         MEND
ALLSTOP  CSECT
ALLSTOP  AMODE 31                 ORE
* HOUSEKEEPING
         STM  R14,R12,12(R13)     SAVE REGISTERS
         LR   R12,R15
         USING ALLSTOP,R12        R12 IS BASE REGISTER
         ST   R13,SAVE+4
         LA   R13,SAVE
* IF PARAMETER "BYPASS" WAS CODED, THEN NO WTOR WILL BE ISSUED
         L    R5,0(R1)
         MODESET MODE=SUP
         CLC  0(2,R5),=H'6'       ONLY "BYPASS" IS SUPPORTED
         BNE  NOPARM
         CLC  =C'BYPASS',2(R5)
         BNE  NOPARM
         B    CONFIRM             "BYPASS" WAS CODED, NO WTOR
NOPARM   DS   0H
* REPLY TO CONFIRM
WTOR1    XC   ECB,ECB
         LA   R6,REPLY
         LA   R8,1                LENGTH OF REPLY ZONE = 1 CHARACTER
         WTOR '** STOPPING ALL PRODUCTS BEFORE IPLING, ENTER C TO CONFIX
               RM, T TO TERMINATE',(6),(8),ECB
         WAIT ECB=ECB
* ANALYZING THE REPLY
         CLI  REPLY,C'C'          R XX,C : STOPPING MUST BE DONE
         BE   CONFIRM
         CLI  REPLY,C'T'          R XX,T : EXIT
         BE   THEEND
         WTO  '** INVALID REPLY, PLEASE REENTER **'
         B    WTOR1
CONFIRM  DS   0H
         LA   R11,TABNOSTP        TABLE OF JOBS/TASKS NOT TO BE STOPPED
* VERIFY IF //SYSIN WAS ALREADY OPENED
         LA   R1,SYSIN
         USING IHADCB,R1
         TM   DCBOFLGS,DCBOFOPN   SYSIN ALREADY OPEN ?
         BO   ALREOPEN
         DROP R1
         OPEN (SYSIN,(INPUT))     OPEN //SYSIN FILE
ALREOPEN DS   0H
LOOPIN   GET  SYSIN,ZONE
* ANALYSE PARAMETERS
         SPACES  REPLZONE
         CLI  ZONE,C'*'           LINE OF COMMENTS ?
         BE   LOOPIN
         CLC  =C'NOSTOP ',ZONE    "DON'T STOP" JOB ?
         BE   NOSTOPT
         CLC  =C'WAIT ',ZONE      MUST WE WAIT A WHILE ?
         BE   WAITTIME
         CLC  ZONE(6),$PJES2      MUST WE ALREADY STOP JES2 ?
         BE   TRTJES2
         CLC  =C'MVS ',ZONE       MUST WE ISSUE "Z EOD" ?
         BE   TRTMVS
* PROCESSING A JOBNAME (IN ORDER TO STOP IT CORRECTLY)
         SPACES JOBNAME           SET TO SPACES
         LA   R2,JOBNAME
         LA   R1,ZONE
* LOOP TO GET THE NAME OF THE JOB OR THE STC TO BE STOPPED
LOOPTR   CLI  0(R1),C' '          BLANK ?
         BE   ENDOFZON            YES, END OF ZONE
         MVC  0(1,R2),0(R1)       GET ONE CHARACTER OF JOBNAME
         LA   R1,1(0,R1)          NEXT CHARACTER IN ZONE
         LA   R2,1(0,R2)          NEXT CHARACTER IN OUTPUT ZONE
         B    LOOPTR
ENDOFZON DS   0H
         CLI  JOBNAME,C' '        BLANK PARAMETER
         BE   LOOPIN
* PROCESS ONE JOB
         LA   R1,1(0,R1)
         MVC  REPLZONE(60),0(R1)
         CLC  =C'REPLY ',0(R1)    JOB CAN BE STOPPED VIA REPLY
         BE   SENDREPL
* THE JOB CAN BE STOPPED BY AN MVS COMMAND
         SYSJOB  JOBNAME=JOBNAME
         LTR  R15,R15
         BNZ  NOJOB
         ST   R0,ASID
* IF  "JOBNAME WAIT" WAS CODED, AND JOB IS ACTIVE, LET'S WAIT
LABEL31  CLC  =C'WAIT ',REPLZONE
         BNE  LABEL11
* IF  "JOBNAME WAIT NN" WAS CODED, LET'S WAIT 'NN' SECONDS
         CLC  =C'WAIT  ',REPLZONE
         BE   WAITPURE                'JOBNAME WAIT'
         MVC  INT+4(2),REPLZONE+5     WAIT TIME
         B    PREPWAIT
* WAITING FOR EVER, UNTIL THE JOB STOPS
WAITPURE BAL  R9,WAITJOBS
         B    LOOPIN
* ISSUE A COMMAND TO STOP THE JOB
LABEL11  $MVSCMD REPLZONE
         B    LOOPIN
* THE JOB MUST BE STOPPED BY ISSUING A REPLY
SENDREPL DS   0H
         SPACES REPLZONE
         MVC  REPLZONE(40),6(R1)
         SYSJOB  JOBNAME=JOBNAME
         LTR  R15,R15
         BNZ  NOJOB
         ST   R0,ASID
*        find number of outstanding reply
         L    R1,16               LOAD ADDRESS OF CVT
         L    R1,CVTCUCB-CVT(,R1) LOAD ADDRESS OF UCM BASE
         L    R2,UCMRPYQ-UCM(,R1) LOAD ADDRESS OF 1ST ORE
         USING OREF,R2
         LTR  R2,R2               ADDRESS OF  ORE = 0 ?
         BZ   NOREPLY
         MODESET EXTKEY=ZERO
LOOP3    CLC  OREASID,ASID+2      OUR ASID ?
         BE   FOUNDORE            YES, QUIT THE LOOP
         L    R2,ORELKP           TAKE ADDRESS OF NEXT ORE
         LTR  R2,R2               ADDRESS OF NEXT ORE = 0 ?
         BNZ  LOOP3               NO, LOOP
         MODESET KEY=NZERO
         B    NOREPLY             YES, AT END IN CHAIN OF ORES
FOUNDORE MVC  RR,OREID            KEEP REPLY NUMBER
         MODESET KEY=NZERO
         DROP R2                  ORE
* ISSUE THE REPLY COMMAND
         SPACES  COMMAND                      BLANKING OUT COMMAND ZONE
         MVC  COMMAND(2),=C'R '                      "R
         MVC  COMMAND+2(2),RR                           NN
         MVI  COMMAND+4,C','                              ,
         MVC  COMMAND+5(L'REPLZONE),REPLZONE               XXXXXXXX"
         $MVSCMD COMMAND
         B    LOOPIN
* STORE IN A TABLE THE NAMES OF THE ADDRESS SPACES NEVER TO BE STOPPED
NOSTOPT  DS   0H
         CLI  0(R11),X'FF'
         BE   ENDNOSTP
         MVC  0(8,R11),ZONE+7           STORE JOBNAME
         LA   R11,8(0,R11)              NEXT ENTRY IN TABLE
ENDNOSTP B    LOOPIN
* JOB NOT FOUND (WARNING MESSAGE)
NOJOB    MVC  WTO4+24(8),JOBNAME
WTO4     WTO  '**ALLSTOP - JOB ???????? IS NOT ACTIVE'
         B    LOOPIN
* REPLY NOT FOUND (WARNING MESSAGE)
NOREPLY  MVC  WTO5+24(8),JOBNAME
WTO5     WTO  '**ALLSTOP - JOB ???????? HAS NO REPLY PENDING'
         B    LOOPIN
* ENTERING WAIT STATE
WAITTIME DS   0H
         MVC  INT+4(2),ZONE+5
PREPWAIT MVC  WTO1+36(2),INT+4
WTO1     WTO '**ALLSTOP -  WAITING DURING ?? SECONDS **',DESC=(11)
         ST   R1,MSGIDWTO
         STIMER WAIT,,DINTVL=INT        WAITING...
NOSTIM1  L    R1,MSGIDWTO
         LTR  R1,R1
         BZ   LOOPIN
         DOM  MSG=(1)                   SUPPRESS THE MESSAGE
         B    LOOPIN
* BEFORE STOPPING JES2, WE VERIFY THAT NO JOB IS STILL RUNNING    *
TRTJES2  DS   0H
         L    R15,16              CVT ADDRESS
         USING CVT,R15
         L    R6,CVTASVT          LOAD ASVT ADDRESS
         DROP R15
         USING ASVT,R6
         L    R5,ASVTMAXU         R5=MAXUSER
         LA   R6,ASVTENTY-4       R6=ADDRESS OF 1ST ASCB MINUS 4
LSVT1    DS   0H
         LTR  R5,R5               MAXUSER = 0 ?
         BZ   NTFN1               YES, AT END IN ASVT -> NOT FOUND
         BCTR R5,0                MAXUSER - 1
         LA   R6,4(R6)            NEXT ASVT ENTRY
         USING ASCB,R7
         L    R7,0(R6)            R7=ASCB ADDRESS
         TM   0(R6),X'80'         AVAILABLE ASID ?
         BO   LSVT1               ASID NOT AVAILABLE, SKIP IT
         L    R1,ASCBJBNI         LOADING ADDRESS OF JOBNAME
         LTR  R1,R1
         BNZ  LJBN1
         L    R1,ASCBJBNS         LOADING ADDRESS OF STCNAME
LJBN1    DS   0H
* VERIFY WHETHER THIS JOB MUST BE STOPPED
         CLC  JES,0(R1)           JES IS NOT YET TO BE STOPPED...
         BE   LSVT1
         LA   R10,TABNOSTP
LOOP1    CLI  0(R10),X'FF'
         BE   NOTALL
         CLC  0(8,R1),0(R10)      JOBNAME FOUND IN TABLE ?
         BE   LSVT1               YES, SKIP IT
         LA   R10,8(0,R10)
         B    LOOP1
* NOW WE ARE SURE ALL JOBS REQUIRED WERE STOPPED, JES2 MAY BE STOPPED
NTFN1    DS   0H
         $MVSCMD $PJES2           STOPPING JES2 ITSELF
         B    LOOPIN
         DROP R6,R7
* ALL JOBS REQUIRED WERE NOT STOPPED, WE MUST WAIT FOR THEM
NOTALL   DS   0H
         MVC  WTO2+43(8),0(R1)
WTO2     WTO  '**ALLSTOP WILL NOT STOP JES2 WHILE ???????? IS ACTIVE'
         BAL  R9,WAITJOBS
         B    TRTJES2             LET'S TRY AND STOP JES AGAIN
* BEFORE ISSUING Z EOD, WE VERIFY THAT JES HAS BEEN STOPPED       *
TRTMVS   DS   0H
         SYSJOB  JOBNAME=JES
         LTR  R15,R15
         BNZ  ZEOD
         WTO  '**ALLSTOP - Z EOD WILL NOT BE DONE WHILE JES IS ACTIVE'
ENDIN    CLOSE (SYSIN)
         B    WTOR1
ZEOD     DS   0H
         WTO  '**ALLSTOP PROCEDURE COMPLETED (Z EOD) **',DESC=(11)
         $MVSCMD HALTEOD
         CLOSE (SYSIN)
THEEND   L    R13,4(R13)
         RETURN  (14,12),T,RC=0
* WAITING TILL A JOB HAS STOPPED
WAITJOBS DS   0H
         MVC  WTO3+36(8),JOBNAME
WTO3     WTO  '**ALLSTOP - WAITING FOR JOB ???????? TO STOP',DESC=(11)
         ST   R1,MSGIDWTO
LOOPWAI  STIMER WAIT,,DINTVL=INTWAIT
         SYSJOB JOBNAME=JOBNAME
         LTR  R15,R15
         BZ   LOOPWAI        JOB STILL ACTIVE, WAITING AGAIN...
NOSTIM2  L    R1,MSGIDWTO
         LTR  R1,R1
         BZ   ENDWAITJ
         DOM  MSG=(1)        THE MESSAGE CAN BE ROLLED
ENDWAITJ BR R9
INTWAIT  DC   C'00000500'    WAIT INTERVAL (5 SECONDS)
MSGIDWTO DC   F'0'           ID OF MESSAGE AFTER WTO
SAVE     DS   18F            SAVE AREA
JES      DC   CL8'JES2'
HALTEOD  DC   CL80'Z EOD'
REPLY    DS   X'00'
RR       DS   CL2            REPLY NUMBER
INT      DC   C'00000000'    WAIT INTERVAL (VARIABLE)
ECB      DS   F
ASID     DS   F
SYSIN    DCB  DDNAME=SYSIN,EODAD=ENDIN,MACRF=GM,DSORG=PS
REPLZONE DS   CL80
ZONE     DS   CL80
TABNOSTP DC   30CL8' '      TB OF ADDRESS SPACES THAT NEED NOT BE STOPD
         DC   X'FF'         END INDICATOR
JOBNAME  DC   CL8' '
$PJES2   DC   CL80'$PJES2'
COMMAND  DC   CL80' '
MGCRLEN  DC   H'0'          LENGTH
         DC   H'0'          ROUTCODE
MGCRCMD  DC   CL80' '       COMMAND
* DSECTS NEEDED                                                   *
         CVT  DSECT=YES                ,    CVT
         IHAASCB                       ,    ASCB
         IHAASVT                       ,    ASVT
         IHAORE                        ,    OPERATOR REPLY ELEMENT
         IEECUCM                       ,    UCM
         DCBD    DSORG=PS,DEVD=DA           DCB
         YREGS
         END
//SYSLIB   DD DISP=SHR,DSN=GILBERT.TRIMMAC
//         DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.MODGEN
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//LINKLLA EXEC PGM=LINKLLA,PARM='AC=1'
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,PASS)
//SYSLMOD  DD DISP=SHR,DSN=SYS1.P390.LINKLIB(ALLSTOP)
//SYSPRINT DD SYSOUT=*
