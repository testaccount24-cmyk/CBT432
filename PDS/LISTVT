  /* REXX          (C) COPYRIGHT : THIERRY FALISSARD               */
  /* SYS1.MACLIB(IDCDOUT) */

  CTRV = 0
  CTRD = 0

  TITRE = '-------------- D S N A M E ----------------- SMS DSORG '
  TITRE = TITRE||'RECFM BLKSIZE '
  TITRE = TITRE||'LRECL ALLOCATED     USED   CREATION   EXPIR. '
  TITRE = TITRE||'LASTREF. SEQ XT '
  TITRE = TITRE||'VOLSER DATACLAS   STORCLAS   MGMTCLAS   STORGRP'

  DO FOREVER
  'EXECIO 1 DISKR DCOL    (STEM REC.  '    /* READING //DCOL */
  IF RC > 0 THEN DO
                 SAY '**' CTRV 'VOLUMES,' CTRD 'FILES WERE PROCESSED'
                 EXIT
                 END
  TYPE  = SUBSTR(REC.1,5,1)
  /*                                                            */
  /*  RECORD TYPE IS : VOLUME                                   */
  /*                                                            */
  IF   TYPE  =   'V'   THEN   DO
       CTRV = CTRV + 1
       IF CTRV//10 = 0 THEN DO
          SAY 'ALREADY' CTRV 'VOLUMES PROCESSED, AND' ,
          CTRD 'FILES'
          END
       VOLSER     = SUBSTR(REC.1,25,6)
       FLAG1      = SUBSTR(REC.1,31,1)
       INDXVT     = 'NO VTOCIX   '
       IF (BITAND(FLAG1,'40'X) = '40'X) THEN ,
                 INDXVT  = 'ACT VTOCIX  '
                 ELSE IF (BITAND(FLAG1,'80'X) = '80'X) THEN ,
                         INDXVT  = 'INACT VTOCIX'
       DEVICE     = SUBSTR(REC.1,69,8)
       DEVICENUM  = C2X(SUBSTR(REC.1,77,2))
       SGNAME     = SUBSTR(REC.1,83,10)
       POURCFREE  = FORMAT(C2D(SUBSTR(REC.1,36,1)),3)||'% FREE'
       KFREE      = FORMAT(C2D(SUBSTR(REC.1,37,4)),9)||'K FREE'
       KALLOC     = FORMAT(C2D(SUBSTR(REC.1,41,4)),9)||'K ALLOCATED'
       KCAPAC     = FORMAT(C2D(SUBSTR(REC.1,45,4)),9)||'K CAPACITY'
       RECO.1 = ,
           '** VOLUME' VOLSER DEVICENUM SGNAME DEVICE INDXVT '-' ,
                  POURCFREE '-' KCAPAC '-' KFREE '-' KALLOC
  'EXECIO 1 DISKW DCOLOUT (STEM RECO. '    /* WRITING RECORD VOLUME*/

  /* AUTRES INFOS                TF 17-7-95         */
       ERCODE     =     SUBSTR(REC.1,32,1)
       IF  ERCODE =  '00'X THEN ERCODE = '  '
                           ELSE DO
                                ERCODE = 'ERROR CODE' C2X(ERCODE)
                                SAY '** VOLUME' VOLSER ERCODE
                                END
       FRAGIDX    = FORMAT(C2D(SUBSTR(REC.1,49,4)),9)
       LARGEXT    = FORMAT(C2D(SUBSTR(REC.1,53,4)),9)
       NFREEXT    = FORMAT(C2D(SUBSTR(REC.1,57,4)),9)
       NFREEDSCB  = FORMAT(C2D(SUBSTR(REC.1,61,4)),9)
       NFREEVIR   = FORMAT(C2D(SUBSTR(REC.1,65,4)),9)
       RECO.1 = ,
         '          FRAGIDX='||FRAGIDX ,
                  '      LARGEST EXTENT='||LARGEXT||'K' ,
                  '      FREE EXTENTS='||NFREEXT ,
                  '      FREE DSCBS='||NFREEDSCB ,
                  '      FREE VIRS='||NFREEVIR  ERCODE
  'EXECIO 1 DISKW DCOLOUT (STEM RECO. '    /* WRITING RECORD VOLUME*/

   RECO.1 = TITRE
  'EXECIO 1 DISKW DCOLOUT (STEM RECO. '    /* WRITING HEADER       */
       END
  /*                                                            */
  /*  RECORD TYPE IS : DATASET                                  */
  /*                                                            */
  IF   TYPE  =   'D'   THEN   DO
       CTRD = CTRD + 1
       DSN        = SUBSTR(REC.1,25,44)
       FLAG1      = SUBSTR(REC.1,70,1)
       FLAG2      = SUBSTR(REC.1,71,1)

       CATL       = 'NO  '
       IF (BITAND(FLAG2,'20'X) = '20'X) THEN ,
                 CATL    = '    '

       INFO       = '    '
       IF (BITAND(FLAG1,'40'X) = '40'X) THEN ,
                 INFO    = 'SMS '
       IF (BITAND(FLAG1,'10'X) = '10'X) THEN ,
                 INFO    = 'PDSE'

       INFDSORG   = '   ?'
       DSORG      = SUBSTR(REC.1,75,1)
       DSORG2     = SUBSTR(REC.1,76,1)
       IF (BITAND(DSORG,'80'X) = '80'X) THEN   INFDSORG  = 'ISAM'
       IF (BITAND(DSORG,'40'X) = '40'X) THEN   INFDSORG  = '  PS'
       IF (BITAND(DSORG,'20'X) = '20'X) THEN   INFDSORG  = '  DA'
       IF (BITAND(DSORG2,'08'X) = '08'X) THEN  INFDSORG  = 'VSAM'
       IF (BITAND(DSORG,'02'X) = '02'X) THEN   INFDSORG  = '  PO'
       INFDSORG2  = ' '
       IF (BITAND(DSORG,'01'X) = '01'X) THEN   INFDSORG2 = 'U'

       INFRECFM   = ' '
       RECFM      = SUBSTR(REC.1,77,1)
       IF (BITAND(RECFM,'80'X) = '80'X) THEN   INFRECFM  = 'F'
       IF (BITAND(RECFM,'40'X) = '40'X) THEN   INFRECFM  = 'V'
       IF (BITAND(RECFM,'C0'X) = 'C0'X) THEN   INFRECFM  = 'U'
       IF (BITAND(RECFM,'10'X) = '10'X) THEN   INFRECFM  = INFRECFM||,
                       'B'
       IF (BITAND(RECFM,'08'X) = '08'X) THEN   INFRECFM  = INFRECFM||,
                       'S'
       IF (BITAND(RECFM,'04'X) = '04'X) THEN   INFRECFM  = INFRECFM||,
                       'A'
       IF (BITAND(RECFM,'02'X) = '02'X) THEN   INFRECFM  = INFRECFM||,
                       'M'
       INFRECFM   = SUBSTR(INFRECFM||'        ',1,4)

       BLKSIZE    = FORMAT(C2D(SUBSTR(REC.1,85,2)),5)
       LRECL      = FORMAT(C2D(SUBSTR(REC.1,87,2)),5)
       ALLOCSP    = FORMAT(C2D(SUBSTR(REC.1,89,4)),9)
       USEDSP     = FORMAT(C2D(SUBSTR(REC.1,93,4)),9)
       SECONDSP   = FORMAT(C2D(SUBSTR(REC.1,97,4)),9)
       CREDT      = C2X(SUBSTR(REC.1,105,4))
       CREDT      = SUBSTR(CREDT,1,4)||'/'SUBSTR(CREDT,5,3)
       EXPDT      = C2X(SUBSTR(REC.1,109,4))
       EXPDT      = SUBSTR(EXPDT,1,4)||'/'SUBSTR(EXPDT,5,3)
       LASTREF    = C2X(SUBSTR(REC.1,113,4))
       LASTREF    = SUBSTR(LASTREF,1,4)||'/'SUBSTR(LASTREF,5,3)
       EXTENTS    = FORMAT(C2D(SUBSTR(REC.1,78,1)),3)
       VOLSEQ     = FORMAT(C2D(SUBSTR(REC.1,123,2)),2)
  /*   LASTBKUP   = C2X(SUBSTR(REC.1,125,8))                    */
  /*   IF LASTBKUP = '0000000000000000' THEN ,                  */
  /*              LASTBKUP = '                '                 */

       DATACLAS   = SUBSTR(REC.1,135,10)
       STORCLAS   = SUBSTR(REC.1,167,10)
       MGMTCLAS   = SUBSTR(REC.1,199,10)
       STORGRP    = SUBSTR(REC.1,231,10)
       VOLSER2    = SUBSTR(REC.1,79,6)

       RECO.1 = ,
           DSN INFO INFDSORG INFDSORG2 INFRECFM BLKSIZE LRECL ,
            ALLOCSP||'K' USEDSP||'K' CREDT EXPDT LASTREF ,
          VOLSEQ EXTENTS VOLSER2 DATACLAS STORCLAS MGMTCLAS STORGRP ,
            CATL
  'EXECIO 1 DISKW DCOLOUT (STEM RECO. '    /* WRITING //DCOLOUT */
       END
  END
